#!/bin/sh

confdir="${XDG_CONFIG_HOME:=$HOME/.config}/discocss"
preloadFile="$confdir/preload.js"
cssFile="$confdir/custom.css"

mkdir -p "$confdir"

touch "$cssFile"

cat <<EOF > "$preloadFile"
module.exports = () => {
  const fs = require("fs");
  const confDir = "$confdir";
  const cssFile = "$cssFile";

  function reload(style) {
    style.innerHTML = fs.readFileSync(cssFile);
  }

  function inject({ document, window }) {
    window.addEventListener("load", () => {
      const style = document.createElement("style");
      reload(style);
      document.head.appendChild(style);

      fs.watch(confDir, {}, () => reload(style));
    });
  }

  inject(require("electron").webFrame.context);
};

module.exports.mw = (mainWindow) => {
  mainWindow.setBackgroundColor("#00000000");
};

module.exports.mo = (options) => {
  options.transparent = true;
  if (process.platform === "linux") {
    options.frame = true;
  }
};
EOF

#ln -f -s "$preloadFile" /tmp/discocss-preload.js

if [ "$(uname)" = "Darwin" ]; then
  sed_options='-i ""'
  core_asar="$(echo "$HOME/Library/Application Support/discord/"*"/modules/discord_desktop_core/core.asar")"
else
  sed_options='-i'
  #core_asar="$(echo "$XDG_CONFIG_HOME/discord/"*"/modules/discord_desktop_core/core.asar")"
  core_asar="$(echo "$HOME/.var/app/com.discordapp.Discord/config/discord/"*"/modules/discord_desktop_core/core.asar")"
fi

app_preload_replace='s|  // App preload script, used to provide a replacement native API now that          |try {require\(`~/.config/discocss/preload.js`)()} catch \(e\) {console.error\(e\);} |'
#app_preload_replace='s|  // App preload script, used to provide a replacement native API now that|try {require\(`$preloadFile`)()} catch \(e\) {console.error\(e\);} |'
launch_main_app_replace='s|// launch main app window; could be called multiple times for various reasons| const dp = require(`~/.config/discocss/preload.js`);                        |'
#launch_main_app_replace='s|// launch main app window; could be called multiple times for various reasons| const dp = require(`$preloadFile`);                             |'
frame_true_replace='s|    mainWindowOptions.frame = true;|}dp.mo(mainWindowOptions);{        |'
causing_the_window_replace='s|// causing the window to be too small on a larger secondary display| dp.mw(mainWindow);                                                |'
LC_ALL=C sed $sed_options "$app_preload_replace; $launch_main_app_replace; $frame_true_replace; $causing_the_window_replace" \
  "$core_asar"

#command -v discord && exec discord
#command -v Discord && exec Discord
flatpak run com.discordapp.Discord
